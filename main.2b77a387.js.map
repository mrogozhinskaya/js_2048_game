{"version":3,"sources":["scripts/main.js"],"names":["board","messageStart","document","querySelector","messageWin","messageLose","button","fieldRows","querySelectorAll","winner","getElementsByClassName","score","rows","columns","tilesMoved","setGame","r","length","fieldRowCells","c","id","num","updateTile","hasEmptyTile","searchWinnerCell","classList","remove","setTwoTiles","found","randomCellNumber","Math","random","floor","tile","getElementById","innerText","add","value","filterZero","row","filter","slide","currentRow","i","push","canTilesSlide","gameOver","arraysEqual","originalRow","slideLeft","slideRight","reverse","toString","slideUp","slideDown","window","onload","addEventListener","e","code"],"mappings":"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","file":"main.2b77a387.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst button = document.querySelector('.button');\nconst fieldRows = document.querySelectorAll('.field-row');\nconst winner = document.getElementsByClassName('field-cell--2048');\n\nlet board;\nlet score = 0;\nconst rows = 4;\nconst columns = 4;\nlet tilesMoved = false;\n\nwindow.onload = function() {\n  setGame();\n};\n\nfunction setGame() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  for (let r = 0; r < fieldRows.length; r++) {\n    const fieldRowCells = fieldRows[r].querySelectorAll('.field-cell');\n\n    for (let c = 0; c < fieldRowCells.length; c++) {\n      fieldRowCells[c].id = `${r}-${c}`;\n\n      const num = board[r][c];\n\n      updateTile(fieldRowCells[c], num);\n    }\n  }\n}\n\nfunction hasEmptyTile() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction searchWinnerCell() {\n  if (winner.length !== 0) {\n    messageWin.classList.remove('hidden');\n  }\n}\n\nfunction setTwoTiles() {\n  if (!hasEmptyTile()) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const randomCellNumber = Math.random() <= 0.1 ? 4 : 2;\n    const r = Math.floor(Math.random() * rows);\n    const c = Math.floor(Math.random() * columns);\n\n    if (board[r][c] === 0) {\n      board[r][c] = randomCellNumber;\n\n      const tile = document.getElementById(`${r}-${c}`);\n\n      tile.innerText = `${randomCellNumber}`;\n      tile.classList.add(`field-cell--${randomCellNumber}`);\n      found = true;\n    }\n  }\n}\n\nfunction updateTile(tile, num) {\n  tile.innerText = '';\n  tile.classList.value = 'field-cell';\n\n  if (num > 0) {\n    tile.innerText = num;\n    tile.classList.add(`field-cell--${num}`);\n  }\n}\n\nbutton.addEventListener('click', () => {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(`${r}-${c}`);\n\n      tile.innerText = '';\n      tile.classList.value = 'field-cell';\n      board[r][c] = 0;\n    }\n\n    score = 0;\n    document.querySelector('.game-score').innerText = 0;\n  }\n\n  setTwoTiles();\n  setTwoTiles();\n\n  messageStart.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  button.classList.remove('start');\n  button.classList.add('restart');\n  button.innerText = 'Restart';\n});\n\ndocument.addEventListener('keyup', (e) => {\n  if (e.code === 'ArrowLeft') {\n    slideLeft();\n  }\n\n  if (e.code === 'ArrowRight') {\n    slideRight();\n  }\n\n  if (e.code === 'ArrowUp') {\n    slideUp();\n  }\n\n  if (e.code === 'ArrowDown') {\n    slideDown();\n  }\n\n  if (tilesMoved) {\n    setTwoTiles();\n    searchWinnerCell();\n    gameOver();\n  }\n\n  tilesMoved = false;\n  document.querySelector('.game-score').innerText = score;\n});\n\nfunction filterZero(row) {\n  return row.filter(num => num !== 0);\n}\n\nfunction slide(row) {\n  let currentRow = row;\n\n  currentRow = filterZero(currentRow);\n\n  for (let i = 0; i < currentRow.length - 1; i++) {\n    if (currentRow[i] === currentRow[i + 1]) {\n      currentRow[i] *= 2;\n      currentRow[i + 1] = 0;\n      score += currentRow[i];\n    }\n  }\n\n  currentRow = filterZero(currentRow);\n\n  while (currentRow.length < columns) {\n    currentRow.push(0);\n  }\n\n  return currentRow;\n}\n\nfunction canTilesSlide() {\n  if (hasEmptyTile()) {\n    return true;\n  }\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const tile = board[r][c];\n\n      if (c > 0 && tile === board[r][c - 1]) {\n        return true;\n      }\n\n      if (c < columns - 1 && tile === board[r][c + 1]) {\n        return true;\n      }\n\n      if (r > 0 && tile === board[r - 1][c]) {\n        return true;\n      }\n\n      if (r < rows - 1 && tile === board[r + 1][c]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction gameOver() {\n  if (!canTilesSlide()) {\n    messageLose.classList.remove('hidden');\n  }\n}\n\nfunction arraysEqual(originalRow, row) {\n  if (originalRow.length !== row.length) {\n    return false;\n  }\n\n  for (let i = 0; i < originalRow.length; i++) {\n    if (originalRow[i] !== row[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction slideLeft() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n    const originalRow = [...row];\n\n    row = slide(row);\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(`${r}-${c}`);\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n\n    if (!arraysEqual(originalRow, row)) {\n      tilesMoved = true;\n    }\n  }\n}\n\nfunction slideRight() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n    const originalRow = [...row];\n\n    row.reverse();\n\n    row = slide(row);\n\n    row.reverse();\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(`${r.toString()}-${c.toString()}`);\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n\n    if (!arraysEqual(originalRow, row)) {\n      tilesMoved = true;\n    }\n  }\n}\n\nfunction slideUp() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n    const originalRow = [...row];\n\n    row = slide(row);\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n\n      const tile = document.getElementById(`${r.toString()}-${c.toString()}`);\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n\n    if (!arraysEqual(originalRow, row)) {\n      tilesMoved = true;\n    }\n  }\n}\n\nfunction slideDown() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n    const originalRow = [...row];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n\n      const tile = document.getElementById(`${r.toString()}-${c.toString()}`);\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n\n    if (!arraysEqual(originalRow, row)) {\n      tilesMoved = true;\n    }\n  }\n}\n"]}